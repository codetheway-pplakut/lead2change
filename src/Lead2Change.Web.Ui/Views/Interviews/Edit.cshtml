@model Lead2Change.Domain.ViewModels.InterviewWithQuestionsViewModel
@using Lead2Change.Domain.Models;


@* ViewData["Title"] = "Edit";
*@
<div class="row blueHeader full-width mb-sm-3">
    <div class="col-sm-12">
        <h1 class="text-center"><strong>EDIT</strong></h1>
    </div>
</div>
<!--Input form for Interview + Question Creation-->
<div class="container-fluid">
    <form asp-action="Update">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="container-fluid">
            <div class="form-group col-sm-12 d-none">
                <input asp-for="Id" class="form-control" />
            </div>



            <div class="form-group col-sm-12">
                <b><label asp-for="InterviewName" class="control-label">Interview Name</label></b>
                <input asp-for="InterviewName" class="form-control" required />
                <span asp-validation-for="InterviewName" class="text-danger"></span>
            </div>
            <div class="form-group col-sm-12">
                <b><label asp-for="QuestionText" class="control-label" >Add a Question</label></b>

                @Html.TextAreaFor(m => m.QuestionText, new { @class = "form-control" })
                <span asp-validation-for="QuestionText" class="text-danger" ></span>
            </div>
            <div class="form-group col-sm-12">
                <div class="row">
                    <div class="col-sm-6">
                        <!--If this button is pushed a question is added to the database, but the interview isn't saved-->
                        <button type="submit" name="submitButton" value="addQuestion" class="btn btn-lg btn-block orangeBtn">Add Question</button>
                    </div>
                    <div class="col-sm-6">
                        <button type="submit" name="submitButton" value="selectQuestion" class="btn btn-lg btn-block orangeBtn">Select an Existing Question</button>
                    </div>
                </div>

            </div>
            <br />
            <div class="form-group col-sm-12">
                <div class="row">
                    <div class="col-sm-12 text-center">
                        <!--This button saves both the interview and whatever question had been inputed and returns user to interview index page-->
                        <button type="submit" name="submitButton" value="Create" class="btn btn-lg btn-block orangeBtn"> Save</button>
                    </div>
                </div>

            </div>
        </div>
    </form>
    <div class="row">
        <div class="col-sm-12">
            <!--Start of the table containing added questions-->
            <table id="InterviewCreateTable" class="table table-striped table-hover table-responsive-sm fixedTable shadow-lg mt-sm-3">
                <thead class="blueStyle">
                    <tr>
                        <th style="width:75%" class="text-center">@Model.InterviewName Questions</th>
                        <th style="width:25%">Remove a Question</th>
                    </tr>
                </thead>
                <tbody>

                    @if (Model.AddedQuestions != null)
                    {
                        @foreach (Question question in Model.AddedQuestions)
                        {
                           
                           
                                <tr>
                                    <td class="text-center">@question.QuestionString</td>
                                    <td>
                                        <button type="button" class="btn btn-outline-dark btn-lg btn-block" onclick="location.href='@Url.Action("RemoveQuestion", "Interviews", new { interviewId = Model.Id, questionId = question.Id })'">Remove</button>
                                    </td>
                                </tr>
                                
                            }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
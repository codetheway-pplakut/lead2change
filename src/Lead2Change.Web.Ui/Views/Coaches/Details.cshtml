@model Lead2Change.Domain.ViewModels.CoachViewModel
@using Microsoft.AspNetCore.Identity
@using Lead2Change.Domain.Models
@inject SignInManager<AspNetUsers> SignInManager
@inject UserManager<AspNetUsers> UserManager
@*
    ViewData["Title"] = "Details";
*@

<div class="container-fluid">
    <div class="row blueHeader full-width mb-sm-3">
        <div class="col-sm-12">
            <h1 class="text-center"><strong>COACH DETAILS</strong></h1>
        </div>
    </div>

    <div class="card text-dark bg-light mb-3">
        <div class="card-header">
            <div class="row px-sm-3">
                <h3>Coach Information</h3>
                <button class="btn btn-primary ml-auto" type="button" data-toggle="collapse" data-target="#coachInfo" aria-expanded="false" aria-controls="coachInfo">
                    <img src="~/Images/UpDownIcon.png" class="smallIcon" />
                </button>
            </div>
        </div>
            <ul class="list-group list-group-flush collapse" id="coachInfo">
                <li class="list-group-item">First Name:  @Model.CoachFirstName</li>
                <li class="list-group-item">Last Name:  @Model.CoachLastName</li>
                <li class="list-group-item">Email: @Model.CoachEmail</li>
                <li class="list-group-item">Phone Number:  @Model.CoachPhoneNumber</li>
            </ul>
    </div>
    <div class="row">
        <div class="col-sm-12">
            @if(SignInManager.IsSignedIn(User) && User.IsInRole("Coach"))
             {
                    <a class="nav-link text-dark" asp-area="" asp-controller="Coaches" asp-action="CoachesStudents">Assigned Students</a>
             } 
        </div>
    </div>
    <table class="table table-striped shadow-lg pt-2" id="myTable">
        <thead class="blueStyle">
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">Phone Number</th>
                <th scope="col">Options</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.Students)

            {
                <tr>
                    <td>
                        @Html.DisplayFor(modeItem => item.StudentLastName), @Html.DisplayFor(modelItem => item.StudentFirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StudentEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StudentCellPhone)
                    </td>
                    <td>
                        <div>
                            <div class="dropdown">
                                <button class="btn  btn-block orangeBtn mb-sm-2 dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Options</button>
                                <div class="dropdown-menu">
                                    <button class="dropdown-item" type="button" onclick="location.href='@Url.Action("UnassignStudent","Coaches", new { studentId= item.Id })'">Unassign Student</button>
                                    <button class="dropdown-item" type="button" onclick="location.href='@Url.Action("Details","Students", new { studentId= item.Id })'">Student Details</button>
                                    <button class="dropdown-item" type="button" onclick="location.href='@Url.Action("Index","Goals", new { studentId= item.Id })'">Student Goals</button>
                                    @if (item.CareerDeclarationId == Guid.Empty)
                                    {
                                        <button class="dropdown-item" type="button" onclick="location.href='@Url.Action("Create","CareerDeclaration", new { studentId= item.Id })'">Add Student Career</button>
                                    }
                                    else
                                    {
                                        <button class="dropdown-item" type="button" onclick="location.href='@Url.Action("Details","CareerDeclaration", new { studentId= item.Id })'">View Student Career</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </td>

                </tr>
            }
        </tbody>
    </table>

    <div>
        <button class="btn btn-outline-dark btn-lg" onclick="location.href='@Url.Action("Index","Coaches")'">Back To List</button>
    </div>
</div>

@model Lead2Change.Domain.ViewModels.AnswerQuestionViewModel
@*
    ViewData["Title"] = "AnswerQuestion";
*@

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">

            <h2 class="GoalHeadingFont">@Model.InterviewName</h2>
        </div>
    </div>
    <form asp-action="RegisterAnswerQuestion" class="calibri">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group d-none">
            <input asp-for="@Model.Id" class="form-control" />
        </div>
        <div class="form-group d-none">
            <input asp-for="@Model.StudentId" class="form-control" />
        </div>
        <div class="form-group d-none">
            <input asp-for="@Model.InterviewId" class="form-control" />
        </div>
        <div class="form-group d-none">
            <input asp-for="@Model.InterviewName" class="form-control" />
        </div>


        @for (int j = 0; j < Model.QuestionInInterviews.Count; j++)
        {

            <b>@Model.QuestionInInterviews[j].Question.QuestionString</b>


            <div class="form-group">
                <textarea asp-for="@Model.Answers[j].AnswerString" class="form-control" id="exampleFormControlTextarea1" rows="3" placeholder="Your Answer" required></textarea>
                <span asp-validation-for="@Model.Answers[j].AnswerString" class="text-danger" required></span>
            </div>
        }
        <div class="form-group">
            <input type="submit" value="Submit" class="btn btn-submit" />
        </div>
    </form>
    <div align="center">
        <button class="btn btn-outline-dark " onclick="location.href='@Url.Action("StudentsInInterview","Interviews", new { id = Model.InterviewId })'">Back To Student Interviews</button>
    </div>
    <div align="center">
        <button class="btn btn-outline-dark " onclick="location.href='@Url.Action("Index","Interviews", new { studentID = Model.StudentId })'">Back To Interviews</button>
    </div>
</div>





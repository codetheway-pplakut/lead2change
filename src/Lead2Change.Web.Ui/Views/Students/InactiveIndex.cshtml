@using Lead2Change.Domain.Constants
@model List<Lead2Change.Domain.Models.Student>
@*
    ViewData["Title"] = "Index";
*@

<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

<div class="container">
    <div class="row blueHeader full-width mb-sm-3">
        <div class="col-sm-12">
            <h1 class="text-center"><strong>INACTIVE STUDENTS</strong></h1>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3 searchbar ml-auto">
            <input type="text" id="myInput" onkeyup="searchFilter()" placeholder="Search for items.." class="tableInput searchbar__input" align="right">
            <button type="button" class="searchbar__button">
                <i class="material-icons">search</i>
            </button>
        </div>
    </div>
    <table class="table table-striped shadow-lg pt-2" id="myTable">
        <thead class="blueStyle">
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Date Of Birth</th>
                <th scope="col">Email</th>
                <th scope="col">Parent Name</th>
                <th scope="col">Parent Email</th>
                <th scope="col">Options</th>
            </tr>
        </thead>

        <tbody>
            @if (Model != null)
            {
@foreach (var item in Model)
{

<tr>
    <td>
        @Html.DisplayFor(modelItem => item.StudentLastName), @Html.DisplayFor(modelItem => item.StudentFirstName)
    </td>
    <td>
        @*@Html.DisplayFor(modelItem => item.StudentDateOfBirth.ToString("d"))*@
        @*@Model.modelItem => item.StudentDateOfBirth.ToString("d")*@
        @Convert.ToDateTime(item.StudentDateOfBirth).ToString("MM/dd/yyyy")
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.StudentEmail)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ParentLastName), @Html.DisplayFor(modelItem => item.ParentFirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ParentEmail)
    </td>
    <td>
        <div>
            <div>
                @Html.ActionLink("Edit", "Edit", new { studentId = item.Id })
            </div>

            <div>
                @Html.ActionLink("Details", "Details", new { studentId = item.Id })
            </div>

            <div>
                @Html.ActionLink("Goals", "Index", "Goals", new { studentID = item.Id })
            </div>

            <div>
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </div>

            @if (item.CareerDeclarationId == Guid.Empty)
            {
<div>
    @Html.ActionLink("Add Career", "Create", "CareerDeclaration", new { studentId = item.Id })
</div> }
                    else
                    {
<div>
    @Html.ActionLink("View Career", "Details", "CareerDeclaration", new { studentId = item.Id })
</div>}
        </div>
    </td>
</tr>                }            }
        </tbody>
    </table>

    @if (User.IsInRole(StringConstants.RoleNameAdmin))
    {
<div>
    <a asp-action="InterestForm"><b>Register a new student</b></a>
</div>}
</div>
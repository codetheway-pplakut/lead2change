@model Lead2Change.Domain.ViewModels.RegistrationViewModel
@*
    ViewData["Title"] = "Details";
*@
<div class="row blueHeader full-width mb-sm-3">
    <div class="col-sm-12">
        <h1 class="text-center"><strong>Details</strong></h1>
    </div>
</div>


<h3>Basic Student Information</h3>
<p><b>First Name:</b> @Model.StudentFirstName</p>
<p><b>Last Name:</b> @Model.StudentLastName</p>
<p><b>Date of Birth:</b> @Convert.ToDateTime(Model.StudentDateOfBirth).ToString("MM/dd/yyyy")</p>
<p><b>Age:</b> @Model.Age</p>
<p><b>Cell Phone:</b> @Model.StudentCellPhone</p>
<p><b>Email:</b> @Model.StudentEmail</p>
<p><b>Coach:</b> @Model.CoachName</p>


<h3>Other Information</h3>
<p>Address: @Model.StudentAddress</p>
<p>Apartment Number: @Model.StudentApartmentNumber</p>
<p>City: @Model.StudentCity</p>
<p>State: @Model.StudentState</p>
<p>Zip Code: @Model.StudentZipCode</p>
<p>Home Phone: @Model.StudentHomePhone</p>

<p>Career Path: @Model.StudentCareerPath</p>
<p>Career Interest: @Model.StudentCareerInterest</p>

<h3>Parent Info</h3>
<p>First Name:  @Model.ParentFirstName</p>
<p>Last Name: @Model.ParentLastName</p>
<p>Address: @Model.Address</p>
<p>Parent Apartment Number: @Model.ParentApartmentNumber</p>
<p>City: @Model.ParentCity</p>
<p>State: @Model.ParentState</p>
<p>Zip Code: @Model.ParentZipCode</p>
<p>Home Phone: @Model.ParentHomePhone</p>
<p>Cell Phone: @Model.ParentCellPhone</p>
<p>Parent Email: @Model.ParentEmail</p>

<h3>Guidance Counselor Info</h3>
@if (@Model.KnowGuidanceCounselor)
{
    <div>
        <p>I know my guidance counselor: Yes</p>
    </div>
}
else
{
    <div>
        <p>I know my guidance counselor: No</p>
    </div>
}
<p>Guidance Counselor Name: @Model.GuidanceCounselorName</p>
@if (@Model.MeetWithGuidanceCounselor)
{
    <div>
        <p>I meet with my guidance counselor: Yes</p>
    </div>
}
else
{
    <div>
        <p>I meet with my guidance counselor: No</p>
    </div>
}
<p>How often they meet with their guidance counselor: @Model.HowOftenMeetWithGuidanceCounselor</p>
<p>What they have discussed with their guidance counselor: @Model.DiscussWithGuidanceCounselor</p>

<h3>Post-Secondary Plan</h3>
<p>Their plan after high school: @Model.PlanAfterHighSchool</p>
@if (@Model.CollegeApplicationStatus)
{
    <div>
        <p>I have applied to college: Yes</p>
    </div>
}
else
{
    <div>
        <p>I have applied to college: No</p>
    </div>
}
<p>Colleges they have applied to/plan to apply to: @Model.CollegesList</p>
@if (@Model.CollegeEssayStatus)
{
    <div>
        <p>I have begun work on my college essay: Yes</p>
    </div>
}
else
{
    <div>
        <p>I have begun work on my college essay: No</p>
    </div>
}
@if (@Model.CollegeEssayHelp)
{
    <div>
        <p>I need help writing my college essay: Yes</p>
    </div>
}
else
{
    <div>
        <p>I need help writing my college essay: No</p>
    </div>
}
<p>First choice college(s): @Model.FirstChoiceCollege</p>
<p>Second choice college(s) @Model.SecondChoiceCollege</p>
<p>Third choice college(s): @Model.ThirdChoiceCollege</p>
@if (@Model.TradeSchoolStatus)
{
    <div>
        <p>I have already applied to a trade school: Yes</p>
    </div>
}
else
{
    <div>
        <p>I have already applied to a trade school: No</p>
    </div>
}
<p>Trade schools they have applied/plan to apply to: @Model.TradeSchoolsList</p>
@if (@Model.ArmedForcesStatus)
{
    <div>
        <p>I have already applied to the armed forces: Yes</p>
    </div>
}
else
{
    <div>
        <p>I have already applied to the armed forces: No</p>
    </div>
}
<p>Branches they have applied to/plan to apply to: @Model.ArmedForcesBranch</p>
@if (@Model.WorkStatus)
{
    <div>
        <p>I plan to go directly into the workforce after high school: Yes</p>
    </div>
}
else
{
    <div>
        <p>I plan to go directly into the workforce after high school: No</p>
    </div>
}
<p>Career paths they are interested in pursuing: @Model.CareerPathList</p>
<p>Plans for after high school: @Model.OtherPlans</p>
<h3>College Entrance Exam Information</h3>
<p>Date of PACT: @Convert.ToDateTime(Model.PACTTestDate).ToString("MM/dd/yyyy")</p>
<p>PACT Score: @Model.PACTTestScore</p>
<p>Date of PSAT: @Convert.ToDateTime(Model.PSATTestDate).ToString("MM/dd/yyyy")</p>
<p>PSAT Score: @Model.PSATTestScore</p>
<p>Date of SAT: @Convert.ToDateTime(Model.SATTestDate).ToString("MM/dd/yyyy")</p>
<p>SAT Score: @Model.SATTestScore</p>
<p>Date of ACT: @Convert.ToDateTime(Model.ACTTestDate).ToString("MM/dd/yyyy")</p>
<p>ACT Score: @Model.ACTTestScore</p>
@if (@Model.PrepClassRequired)
{
    <div>
        <p>I need a prep class: Yes</p>
    </div>
}
else
{
    <div>
        <p>I need a prep class: No</p>
    </div>
}
<h3>Financial Aid Information</h3>
@if (@Model.FinancialAidProcessComplete)
{
    <div>
        <p>I have already completed the financial aid process: Yes</p>
    </div>
}
else
{
    <div>
        <p>I have already completed the financial aid process: No</p>
    </div>
}
@if (@Model.AssistanceForForms)
{
    <div>
        <p>I need assistance filling out my FAFSA/Financial aid forms: Yes</p>
    </div>
}
else
{
    <div>
        <p>I need assistance filling out my FAFSA/Financial aid forms: No</p>
    </div>
}
<p>Support they need: @Model.SupportNeeded</p>
<h3>Signatures</h3>
<p>Student Signature: @Model.StudentSignature</p>
<p>Date Signed: @Convert.ToDateTime(Model.StudentSignatureDate).ToString("MM/dd/yyyy")</p>
<p>Parent Signature: @Model.ParentSignature</p>
<p>Date Signed: @Convert.ToDateTime(Model.ParentSignatureDate).ToString("MM/dd/yyyy")</p>
<p>Activity Status: @Model.Active</p>



@*<p> @Model.</p>*@

    <button class="btn btn-outline-dark " onclick="location.href='@Url.Action("Index","Students")'">Back To Student List</button>


